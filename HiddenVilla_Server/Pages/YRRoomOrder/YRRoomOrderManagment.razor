@page "/yr-room-order/details/{Id:int}"
@using Models
@using Business.Repository.IRepository
@inject IRoomOrderDetailsRepository roomOrderDetailsRepository
@using Common
<div class="mt-4 px-md-1 mx-md-1">
    @if (IsLoading)
    {
        <div class="spinner"></div>
    }
    else
    {
        <div class="row p-2 my-3 bg-dark" style="border-radius:20px; ">
            <div class="col-6 pt-2 pl-4 text-info">
                <h2>Booking Details : </h2>
            </div>
            <div class="col-6 pt-2 col-md-3 offset-md-3">
                <a href="/yr-room-order" class="btn btn-info form-control">Back to Booking</a>
            </div>
            <div class="col-12 col-lg-8 p-4">
                <div class="row px-2 text-success border-bottom">
                    <div class="col-8 py-1"><p style="font-size:x-large;margin:0px;">Selected Room</p></div>

                </div>

                <div class="row">
                    <div class="col-7">
                        <div id="" class="carousel slide mb-4 m-md-3 m-0 pt-3 pt-md-0" data-ride="carousel">
                            <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
                                <ol class="carousel-indicators">
                                    @{
                                        int imageIndex = 0;
                                        int innerImageIndex = 0;
                                    }
                                    @foreach (var image in YRBooking.YRRoomDTO.YRRoomImages)
                                    {
                                        if (imageIndex == 0)
                                        {
                                            <li data-target="#carouselExampleIndicators" data-slide-to="@imageIndex" class="active"></li>

                                        }
                                        else
                                        {
                                            <li data-target="#carouselExampleIndicators" data-slide-to="@imageIndex"></li>
                                        }
                                        imageIndex++;
                                    }
                                </ol>
                                <div class="carousel-inner">
                                    @foreach (var image in YRBooking.YRRoomDTO.YRRoomImages)
                                    {
                                        if (innerImageIndex == 0)
                                        {
                                            <div class="carousel-item active">
                                                <img class="d-block w-100" style="border-radius:20px;" src="@image.RoomImageUrl" alt="First slide">
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="carousel-item">
                                                <img class="d-block w-100" style="border-radius:20px;" src="@image.RoomImageUrl" alt="First slide">
                                            </div>
                                        }

                                        innerImageIndex++;
                                    }
                                </div>
                                <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Previous</span>
                                </a>
                                <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Next</span>
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="col-5">
                        <span class="float-right pt-4 text-white-50">
                            <span class="float-right">Max Occupancy : @YRBooking.YRRoomDTO.Occupancy adults </span><br />
                            <span class="float-right pt-1">Villa Size : @YRBooking.YRRoomDTO.SqFt sqft</span><br />
                            <span class="float-right pt-1">Cost for @YRBooking.YRRoomDTO.TotalDays nights</span><br />
                            <h4 class="text-warning font-weight-bold pt-5 float-right">
                                USD
                                <span style="border-bottom:1px solid #ff6a00">
                                    @YRBooking.TotalCost.ToString("#,#.00#;(#,#.00#)")
                                </span>
                            </h4>

                        </span>
                    </div>
                </div>
                <div class="row p-2">
                    <div class="col-12">
                        <p class="card-title text-warning" style="font-size:xx-large">@YRBooking.YRRoomDTO.Name</p>
                        <p class="card-text" style="font-size:large">
                            @((MarkupString)YRBooking.YRRoomDTO.Details)
                        </p>
                    </div>

                </div>
                <div class="row p-2">
                    @if (YRBooking.Status == SD.Status_Booked || YRBooking.Status == SD.Status_Pending)
                    {
                        <div class="col-3">
                            <button @onclick="CancelBooking" class="btn btn-danger form-control">Cancel Booking </button>
                        </div>
                    }

                    @if (YRBooking.Status == SD.Status_Booked)
                    {
                        <div class="col-3 offset-1">
                            <button @onclick="NoShowBooking" class="btn btn-warning form-control">No Show </button>
                        </div>
                    }
                </div>
            </div>

            <div class="col-12 col-lg-4 p-4 2 mt-4 mt-md-0">
                <div class="row px-2 text-success border-bottom"><div class="col-7 py-1"><p style="font-size:x-large;margin:0px;">Enter Details</p></div></div>
                <div class="form-group pt-2">
                    <label class="text-warning">Booking Status</label>
                    <input @bind-value="YRBooking.Status" type="text" disabled class="form-control" />
                </div>
                <div class="form-group pt-2">
                    <label class="text-warning">Name</label>
                    <input @bind-value="YRBooking.Name" type="text" disabled class="form-control" />
                </div>
                <div class="form-group pt-2">
                    <label class="text-warning">Phone</label>
                    <input @bind-value="YRBooking.Phone" type="text" disabled class="form-control" />
                </div>
                <div class="form-group">
                    <label class="text-warning">Email</label>
                    <input @bind-value="YRBooking.Email" type="text" disabled class="form-control" />
                </div>
                <div class="form-group">
                    <label class="text-warning">Check in Date</label>
                    <input type="text" disabled value="@YRBooking.CheckInDate.ToShortDateString()" class="form-control" />
                </div>

                <div class="form-group">
                    <label class="text-warning">Check out Date</label>
                    <input type="text" disabled value="@YRBooking.CheckOutDate.ToShortDateString()" class="form-control" />
                </div>
                @if (YRBooking.Status == SD.Status_CheckedIn || YRBooking.Status == SD.Status_CheckedOut_Completed)
                {
                    <div class="form-group">
                        <label class="text-warning">Actual Check In Date</label>
                        <input type="text" disabled value="@YRBooking.ActualCheckInDate.ToShortDateString()" class="form-control" />
                    </div>
                }
                @if (YRBooking.Status == SD.Status_CheckedOut_Completed)
                {
                    <div class="form-group">
                        <label class="text-warning">Actual Check Out Date</label>
                        <input type="text" disabled value="@YRBooking.ActualCheckOutDate.ToShortDateString()" class="form-control" />
                    </div>
                }
                <div class="form-group">

                    @if (YRBooking.Status == SD.Status_Booked)
                    {
                        <button @onclick="ConfirmCheckIn" class="btn btn-success">Confirm Check In</button>
                    }

                    @if (YRBooking.Status == SD.Status_CheckedIn)
                    {
                        <button @onclick="ConfirmCheckOut" class="btn btn-success">Confirm Check Out </button>
                    }
                </div>
            </div>


        </div>
    }


</div>


@code {
    [Parameter]
    public int Id { get; set; }

    private RoomOrderDetailsDTO YRBooking { get; set; } = new RoomOrderDetailsDTO() { YRRoomDTO = new YRRoomDTO() };
    private bool IsLoading { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;

        if (Id != 0)
        {
            YRBooking = await roomOrderDetailsRepository.GetRoomOrderDetail(Id);
        }
        else
        {
            //error
        }

        IsLoading = false;
    }

    private async Task ConfirmCheckIn()
    {
        await roomOrderDetailsRepository.UpdateOrderStatus(YRBooking.Id, SD.Status_CheckedIn);
        YRBooking = await roomOrderDetailsRepository.GetRoomOrderDetail(Id);
    }

    private async Task ConfirmCheckOut()
    {
        await roomOrderDetailsRepository.UpdateOrderStatus(YRBooking.Id, SD.Status_CheckedOut_Completed);
        YRBooking = await roomOrderDetailsRepository.GetRoomOrderDetail(Id);
    }

    private async Task CancelBooking()
    {
        await roomOrderDetailsRepository.UpdateOrderStatus(YRBooking.Id, SD.Status_Cancelled);
        YRBooking = await roomOrderDetailsRepository.GetRoomOrderDetail(Id);
    }

    private async Task NoShowBooking()
    {
        await roomOrderDetailsRepository.UpdateOrderStatus(YRBooking.Id, SD.Status_NoShow);
        YRBooking = await roomOrderDetailsRepository.GetRoomOrderDetail(Id);
    }
}
